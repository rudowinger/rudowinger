"None" => "{NONE}", //Skip, Buffer # does not exist
"P3F" => "float,float,float", // position (3)
"P3F_C4B_N4B_T2F" => "float,float,float,ubyte,ubyte,ubyte,ubyte,byte,byte,byte,byte,floathalf,floathalf", // position (3), color(4), normal(4), uv(2)
"T4H_B4H" => "short,short,short,short,short,short,short,short", // tangent(4), bitangent(4)
"W4B_I4B" => "ubyte,ubyte,ubyte,ubyte,ubyte,ubyte,ubyte,ubyte", // boneWeights(4), boneIndices(4)
"P3H" => "short,short,short,short", // position (4)
"Q4H_T2H" => "floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // tangentAsQuat(4), uv(2)
"Q4H_T2H_T2H" => "floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // tangentAsQuat(4), uv(2) , uv(2)
"Q4H_T2H_T4H" => "floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // tangentAsQuat(4), uv(2), tangent(4)
"P3F_N4B_T2F" => "float,float,float,byte,byte,byte,byte,float,float", // position (3), normal(4), uv(2)
"C4B_Q4H_T2H" => "ubyte,ubyte,ubyte,ubyte,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // color(4), tangentAsQuat(4), uv(2)
"C4B_Q4H_T2H_T2H" => "ubyte,ubyte,ubyte,ubyte,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // color(4), tangentAsQuat(4), uv(2), uv(2)
"C4B_Q4H_T2H_T4H" => "ubyte,ubyte,ubyte,ubyte,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // color(4), tangentAsQuat(4), uv(2), tangent(4)
"C4B_Q4H_T2H_T2H_T4H" => "ubyte,ubyte,ubyte,ubyte,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // color(4), tangentAsQuat(4), uv(2), uv(2), tangent(4)
"C4B_N4B_T2H_T2H" => "ubyte,ubyte,ubyte,ubyte,byte,byte,byte,byte,floathalf,floathalf,floathalf,floathalf", // color(4), normal(4), uv(2), uv(2)
"Q4H_T2H_T2H_T4H" => "floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", //tangentAsQuat(4), uv(2), uv(2), tangent(4)
"N4B_T2H_T2H" => "byte,byte,byte,byte,floathalf,floathalf,floathalf,floathalf", // normal(4), uv(2), uv(2)
"N4B_T2H_T4H" => "byte,byte,byte,byte,floathalf,floathalf,floathalf,floathalf,floathalf,floathalf", // normal(4), uv(2), tangent(4)
    

Legend:
"Method" => "Data Type List", // Description: data point (number of data entries, i.e. short,short = (2x short); float,float,float,float = (4x float) )

float = Float
floathalf = Half Float
short = Short
ubyte = Unsigned Byte
byte = (Signed) Byte
ubyte = Unsigned Byte
